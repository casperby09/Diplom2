@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @if (User.Identity.IsAuthenticated && User.FindFirst("ThemeSite").Value == "True")
            {
                <a class="nav-link text-dark" onclick="return themesite(this)" href="#">Light theme</a>
            }
            else
            {
                <a class="nav-link text-dark" onclick="return themesite(this)" href="#">Dark theme</a>
            }
        </li>
        @if (User.IsInRole("user"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Collections" asp-action="Index">My collections</a>
            </li>
        }
        @if (User.IsInRole("admin"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Admin" asp-action="Index">ADMIN PANEL</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
        
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
